{"body":"# Introduction\r\n\r\n[Live coding](http://toplap.org) is an alternative way to compose and\r\nplay music (or other media) in real-time.  The performer/composer\r\nplays on a computer device and shows your screen to the public, making\r\nthem part of the performance and at the same time demystifying what\r\nthe musician is really doing to generate that weird sounds. Live\r\ncoders commonly use general domain languages or create their own\r\ncomputer music languages.\r\n\r\n*Vivace* is a live coding language that runs on Web using the [Web\r\n Audio\r\n API](https://dvcs.w3.org/hg/audio/raw-file/tip/webaudio/specification.html)\r\n for process audio and the HTML5 video tag to play videos. The\r\n language parser is built using the awesome [Jison](http://jison.org).\r\n\r\nFor now, just Chrome and Safari implements Web Audio API, so you have\r\nto run vivace on it.\r\n\r\n[Try vivace right now clicking\r\nhere!](http://vivacelang.herokuapp.com). You can even play together\r\nwith others, just share this URL [http://vivacelang.herokuapp.com]()\r\nwith them and try typing and evaluating (ctrl+x).\r\n\r\n# The language\r\n\r\nThe language is not complete. We have a [draft specification\r\nhere](https://github.com/automata/vivace/wiki/Language-spec). Feel\r\nfree to suggest your own commands/syntax/grammar to us!\r\n\r\nFor now you can basically use vivace as a \"sampler language\". You can\r\nspecify which audio or video file you want to play and hack some of\r\nits parameters on-the-fly.\r\n\r\n# Running your own vivace\r\n\r\nYou can use vivace just loading [this demo\r\napp](http://vivacelang.herokuapp.com). But if you want to run your own\r\nvivace on your computer/server, follow these next steps.\r\n\r\nClone this repos:\r\n\r\n    $ git clone git://github.com/automata/vivace.git\r\n\r\nDownload nodejs and install it:\r\n\r\n    $ wget -c http://nodejs.org/dist/v0.8.9/node-v0.8.9.tar.gz\r\n    $ tar -xvzf node-v0.8.9.tar.gz\r\n    $ cd node-v0.8.9/\r\n    $ ./configure\r\n    $ make\r\n    $ sudo make install\r\n\r\nInstall vivace dependencies:\r\n\r\n    $ cd vivace/\r\n    $ npm install\r\n    \r\nRun:\r\n\r\n    $ node server.js\r\n\r\nOpen [http://localhost:5000]() on your Chrome or Safari browser. You\r\ncan even share this URL with others and live code together.\r\n\r\n# Using your own audio/video files\r\n\r\nCopy some audio (wav, mp3, ogg) or video (mp4, webm, ogv) to *media/*:\r\n\r\n    $ cp *.wav vivace/media/\r\n\r\nAnd edit file vivace_exec.js, to map variable names to your files:\r\n\r\n    var files = [{name: 'a', fileName: 'kick.wav', type: 'audio'},\r\n                 {name: 'b', fileName: 'foo.mp4', type: 'video'}]\r\n\r\n","tagline":"Live coding language for Web","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"vivace"}